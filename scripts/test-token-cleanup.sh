#!/bin/bash

# Script de test pour le nettoyage des tokens
# V√©rifie que le probl√®me de tokens en double est r√©solu

echo "üß™ Test du nettoyage des tokens en double"
echo "=========================================="

# Attendre que le backend soit pr√™t
echo "‚è≥ Attente du d√©marrage du backend..."
sleep 10

# URL de base
BASE_URL="http://localhost:8080/api"

# Test 1: Connexion admin
echo ""
echo "üîê Test 1: Connexion admin"
echo "-------------------------"
LOGIN_RESPONSE=$(curl -s -X POST "$BASE_URL/auth/login" \
  -H "Content-Type: application/json" \
  -d '{
    "username": "admin",
    "password": "OusmaneSonko@2029"
  }')

echo "R√©ponse de connexion: $LOGIN_RESPONSE"

# Extraire le token d'acc√®s
ACCESS_TOKEN=$(echo $LOGIN_RESPONSE | grep -o '"accessToken":"[^"]*"' | cut -d'"' -f4)
REFRESH_TOKEN=$(echo $LOGIN_RESPONSE | grep -o '"refreshToken":"[^"]*"' | cut -d'"' -f4)

if [ -z "$ACCESS_TOKEN" ]; then
    echo "‚ùå √âchec de la connexion"
    exit 1
fi

echo "‚úÖ Connexion r√©ussie"
echo "Access Token: ${ACCESS_TOKEN:0:50}..."

# Test 2: Refresh du token plusieurs fois pour cr√©er des doublons
echo ""
echo "üîÑ Test 2: Cr√©ation de tokens en double via refresh"
echo "-------------------------------------------------"

for i in {1..3}; do
    echo "Refresh $i..."
    REFRESH_RESPONSE=$(curl -s -X POST "$BASE_URL/auth/refresh?refreshToken=$REFRESH_TOKEN" \
      -H "Authorization: Bearer $ACCESS_TOKEN")
    
    NEW_ACCESS_TOKEN=$(echo $REFRESH_RESPONSE | grep -o '"accessToken":"[^"]*"' | cut -d'"' -f4)
    if [ ! -z "$NEW_ACCESS_TOKEN" ]; then
        ACCESS_TOKEN=$NEW_ACCESS_TOKEN
        echo "‚úÖ Refresh $i r√©ussi"
    else
        echo "‚ùå Refresh $i √©chou√©"
    fi
done

# Test 3: Nettoyage manuel des tokens
echo ""
echo "üßπ Test 3: Nettoyage manuel des tokens"
echo "-------------------------------------"

CLEANUP_RESPONSE=$(curl -s -X POST "$BASE_URL/admin/cleanup-tokens" \
  -H "Authorization: Bearer $ACCESS_TOKEN" \
  -H "Content-Type: application/json")

echo "R√©ponse du nettoyage: $CLEANUP_RESPONSE"

# Test 4: V√©rification que l'authentification fonctionne toujours
echo ""
echo "üîç Test 4: V√©rification de l'authentification"
echo "--------------------------------------------"

AUTH_TEST=$(curl -s -X GET "$BASE_URL/articles/recent?page=0&size=5" \
  -H "Authorization: Bearer $ACCESS_TOKEN")

if [[ $AUTH_TEST == *"articles"* ]]; then
    echo "‚úÖ Authentification fonctionne apr√®s nettoyage"
else
    echo "‚ùå Probl√®me d'authentification apr√®s nettoyage"
    echo "R√©ponse: $AUTH_TEST"
fi

# Test 5: Test de cr√©ation d'article (qui causait le probl√®me)
echo ""
echo "üìù Test 5: Test de cr√©ation d'article"
echo "-----------------------------------"

ARTICLE_RESPONSE=$(curl -s -X POST "$BASE_URL/articles" \
  -H "Authorization: Bearer $ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "title": "Test Article",
    "content": "Contenu de test",
    "summary": "R√©sum√© de test",
    "categoryId": "00000000-0000-0000-0000-000000000001"
  }')

if [[ $ARTICLE_RESPONSE == *"id"* ]]; then
    echo "‚úÖ Cr√©ation d'article r√©ussie"
    echo "Article cr√©√©: $ARTICLE_RESPONSE"
else
    echo "‚ùå √âchec de cr√©ation d'article"
    echo "R√©ponse: $ARTICLE_RESPONSE"
fi

echo ""
echo "üéâ Tests termin√©s !"
echo "==================" 